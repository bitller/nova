{"version":3,"sources":["bill.js"],"names":[],"mappingsfile":"bill.js","sourcesContent":["new Vue({\n\n    el: '#bill',\n\n    data: {\n        pageHover: false,\n        counter: 0\n    },\n\n    ready: function() {\n        this.getBill();\n    },\n\n    methods: {\n\n        /**\n         * @param showSuccess callback when get bills request is finished\n         * @param hideLoader If set to true, loading alert will not be displayed\n         */\n        getBill: function(showSuccess, hideLoader) {\n\n            if (typeof hideLoader === 'undefined') {\n                Alert.loader();\n            }\n\n            this.$http.get('/bills/' + $('#bill').attr('bill-id') + '/get', function(response) {\n\n                this.$set('bill', response);\n                this.$set('loaded', true);\n\n                if (typeof showSuccess === 'undefined') {\n                    Alert.close();\n                    return;\n                }\n                showSuccess();\n            });\n\n        },\n\n        /**\n         * Edit product page from bill.\n         *\n         * @param productPage\n         * @param productId\n         * @param productCode\n         */\n        editPage: function(productPage, productId, productCode) {\n\n            var thisInstance = this;\n\n            Alert.editPage(productPage, function(inputValue) {\n\n                var data = {\n                    product_id: productId,\n                    product_code: productCode,\n                    product_page: inputValue\n                };\n\n                thisInstance.$http.post('/bills/' + $('#bill').attr('bill-id') + '/edit-page/', data, function(response) {\n\n                    // Handle success response\n                    if (response.success) {\n                        this.getBill(function() {\n                            Alert.success(Translation.common('success'), Translation.bill('page-updated'));\n                        }, true);\n                        return true;\n                    }\n\n                }).error(function(response) {\n\n                    if (response.message) {\n                        Alert.error(response.message);\n                        return false;\n                    }\n\n                    Alert.generalError();\n                });\n\n            });\n        },\n\n        /**\n         * Edit product quantity.\n         *\n         * @param productQuantity\n         * @param productId\n         * @param productCode\n         */\n        editQuantity: function(productQuantity, productId, productCode) {\n\n            var thisInstance = this;\n\n            // Show edit quantity alert\n            Alert.editQuantity(productQuantity, function(inputValue) {\n\n                // Build post data\n                var data = {\n                    product_id: productId,\n                    product_code: productCode,\n                    product_quantity: inputValue\n                };\n\n                // Make post request\n                thisInstance.$http.post('/bills/' + $('#bill').attr('bill-id') + '/edit-quantity', data, function(response) {\n\n                    if (response.success) {\n                        this.getBill(function() {\n                            Alert.success(Translation.common('success'), Translation.bill('quantity-updated'));\n                        }, true);\n                        return true;\n                    }\n\n                }).error(function(response) {\n\n                    if (response.message) {\n                        Alert.error(response.title, response.message);\n                        return false;\n                    }\n\n                    Alert.generalError();\n\n                });\n\n            });\n\n        },\n\n        /**\n         * Delete product from bill.\n         *\n         * @param id\n         */\n        deleteProduct: function(id, code) {\n\n            var thisInstance = this;\n\n            // Ask for confirmation\n            Alert.confirmDelete(function() {\n\n                // Show loader\n                Alert.loader();\n\n                // Make request\n                thisInstance.$http.get('/bills/' + $('#bill').attr('bill-id') + '/delete/' + id + '/' + code, function(response) {\n\n                    // If a success response is returned reload products and show a success message\n                    if (response.success) {\n                        this.getBill(function() {\n                            Alert.success(Translation.common('success'), Translation.common('product-deleted'));\n                        });\n                        return;\n                    }\n\n                    Alert.generalError();\n\n                }).error(function(response) {\n                    Alert.generalError();\n                });\n\n            });\n        }\n\n    }\n});"],"sourceRoot":"/source/"}