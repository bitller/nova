{"version":3,"sources":["bills.js"],"names":[],"mappingsfile":"bills.js","sourcesContent":["new Vue({\n    el: '#bills',\n\n    data: {\n        rows: 0,\n        create_button: Translation.bills('create-button')\n    },\n\n    ready: function() {\n        this.getBills('/bills/get');\n    },\n\n    methods: {\n\n        /**\n         * Make request to delete bill.\n         *\n         * @param bill_id\n         * @param current_page\n         * @param rows_on_page\n         * @param loading\n         */\n        deleteBill: function(bill_id, current_page, rows_on_page) {\n\n            var thisInstance = this;\n\n            Alert.confirmDeleteBill(function() {\n\n                Alert.loader();\n\n                // Make request to delete bill\n                thisInstance.$http.get(UrlBuilder.deleteBill(bill_id)).success(function(response) {\n\n                    // Make request to get bills\n                    thisInstance.$http.get(UrlBuilder.getBill(rows_on_page, current_page)).success(function(data) {\n                        Alert.success(response.title, response.message);\n                        this.$set('bills', data);\n                    });\n\n                }).error(function(response) {\n\n                    if (response.message) {\n                        Alert.error(response.title, response.message);\n                        return;\n                    }\n\n                    Alert.generalError();\n\n                });\n            });\n        },\n\n        /**\n         * Create new bill.\n         */\n        createBill: function() {\n\n            this.$set('loading', true);\n\n            // Build post data\n            var data = {\n                _token: Token.get(),\n                client: $('#client-name').val()\n            };\n\n            this.$http.post('/bills/create', data, function(response) {\n\n                // Handle success response\n                this.getBills('/bills/get', function() {\n                    this.$set('loading', false);\n                    $('#create-bill-modal').modal('hide');\n                    Alert.success(response.title, response.message);\n                });\n\n            }).error(function(response) {\n                this.$set('loading', false);\n\n                // Handle error response\n                if (!response.message) {\n                    this.$set('error', Translation.common('general-error'));\n                    return;\n                }\n\n                this.$set('error', response.message);\n            });\n\n        },\n\n        /**\n         * Reset create bill modal.\n         */\n        resetCreateBillModal: function() {\n            this.$set('loading', false);\n            this.$set('create_button', Translation.bills('create-button'));\n            this.$set('error', false);\n            $('#client-name').val('');\n        },\n\n        /**\n         * This method is called by pagination links\n         *\n         * @param page_url\n         */\n        paginate: function(page_url) {\n            if (page_url) {\n                this.getBills(page_url);\n            }\n        },\n\n        /**\n         * Make ajax request to get bills\n         *\n         * @param url\n         * @param callback\n         */\n        getBills: function(url, callback) {\n\n\n            if (typeof callback === 'undefined') {\n                this.$set('loaded', false);\n                Alert.loader();\n            }\n\n            this.$http.get(url).success(function(data) {\n                this.$set('bills', data);\n                this.$set('loaded', true);\n\n                if (typeof callback === 'undefined') {\n                    swal.close();\n                    return;\n                }\n                callback();\n            });\n        },\n\n        /**\n         * Return url to paginate bills\n         *\n         * @param rows_on_page\n         * @param current_page\n         * @returns {string}\n         */\n        buildBillUrl: function(rows_on_page, current_page) {\n\n            if (rows_on_page < 1) {\n                current_page = current_page - 1;\n            }\n\n            return '/bills/get?page=' + current_page;\n        }\n\n    }\n});"],"sourceRoot":"/source/"}