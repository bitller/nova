{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"admin-center_products-manager_index.js","sourcesContent":["new Vue({\n\n    /**\n     * Target element.\n     */\n    el: '#products-manager-index',\n\n    /**\n     * Called when vue si ready.\n     */\n    ready: function() {\n        this.getProducts('/admin-center/products-manager/get');\n    },\n\n    methods: {\n\n        /**\n         * Make get request and return products.\n         *\n         * @param url\n         * @param callback\n         */\n        getProducts: function(url, callback) {\n\n            // Show loader if no callback was given\n            if (typeof callback === 'undefined') {\n                Alert.loader();\n            }\n\n            // Make get request\n            this.$http.get(url, function(response) {\n\n                this.$set('products', response);\n                this.$set('loaded', true);\n\n                // Execute callback if given\n                if (typeof callback !== 'undefined') {\n                    callback();\n                    return;\n                }\n\n                // Else just close the loading alert\n                Alert.close();\n\n            }).error(function(response) {\n                //\n            });\n        },\n\n        toggleSearch: function() {\n            $('.search-application-products').toggle(400);\n        },\n\n        search: function() {\n\n            Alert.loader();\n            var thisInstance = this;\n\n            this.getProducts('/admin-center/products-manager/get/search?term=' + this.$get('search_term'), function() {\n\n                var searched = false;\n\n                if (thisInstance.$get('search_term')) {\n                    searched = true;\n                }\n\n                thisInstance.$set('searched', searched);\n\n                Alert.close();\n            });\n        },\n\n        resetSearch: function() {\n\n            Alert.loader();\n            var thisInstance = this;\n\n            this.getProducts('/admin-center/products-manager/get', function() {\n                thisInstance.$set('search_term', '');\n                $('#search-application-products-input').val('');\n                Alert.close();\n            });\n        }\n    }\n});"],"sourceRoot":"/source/"}