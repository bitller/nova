{"version":3,"sources":["index.js"],"names":[],"mappingsfile":"admin-center_products-manager_index.js","sourcesContent":["new Vue({\n\n    /**\n     * Target element.\n     */\n    el: '#products-manager-index',\n\n    /**\n     * Called when vue si ready.\n     */\n    ready: function() {\n        this.getProducts('/admin-center/products-manager/get');\n    },\n\n    methods: {\n\n        /**\n         * Make get request and return products.\n         *\n         * @param url\n         * @param callback\n         */\n        getProducts: function(url, callback) {\n\n            // Show loader if no callback was given\n            if (typeof callback === 'undefined') {\n                Alert.loader();\n            }\n\n            // Make get request\n            this.$http.get(url, function(response) {\n\n                this.$set('products', response);\n                this.$set('loaded', true);\n\n                // Execute callback if given\n                if (typeof callback !== 'undefined') {\n                    callback();\n                    return;\n                }\n\n                // Else just close the loading alert\n                Alert.close();\n\n            }).error(function(response) {\n                //\n            });\n        },\n\n        /**\n         * Toggle search bar.\n         */\n        toggleSearch: function() {\n            $('.search-application-products').toggle(400);\n        },\n\n        /**\n         * Handle products search.\n         */\n        search: function() {\n\n            Alert.loader();\n            var thisInstance = this;\n\n            this.getProducts('/admin-center/products-manager/get/search?term=' + this.$get('search_term'), function() {\n\n                var searched = false;\n\n                if (thisInstance.$get('search_term')) {\n                    searched = true;\n                }\n\n                thisInstance.$set('searched', searched);\n\n                Alert.close();\n            });\n        },\n\n        /**\n         * Reset search and display all products.\n         */\n        resetSearch: function() {\n\n            Alert.loader();\n            var thisInstance = this;\n\n            this.getProducts('/admin-center/products-manager/get', function() {\n                thisInstance.$set('search_term', '');\n                $('#search-application-products-input').val('');\n                Alert.close();\n            });\n        },\n\n        /**\n         * Check if given product code is used or not.\n         */\n        checkIfProductCodeIsUsed: function() {\n\n            var thisInstance = this;\n            var product_code = this.$get('product_code');\n            this.$set('checking_product_code', true);\n\n            // Build post data\n            var postData = {\n                _token: Token.get(),\n                product_code: product_code\n            };\n\n            // Make post request to the server\n            this.$http.post('/admin-center/products-manager/check-if-code-is-used', postData, function(response) {\n\n                thisInstance.$set('checking_product_code', false);\n                thisInstance.$set('product_used', response.used);\n                thisInstance.$set('checked', true);\n\n            }).error(function(response) {\n\n                this.$set('checking_product_code', false);\n\n                // Set general error message if a server occurred\n                if (!response.message) {\n                    this.$set('error', Translation.common('general-error'));\n                    return;\n                }\n\n                this.$set('errors', response.errors);\n            });\n        },\n\n        /**\n         * Check if other product code is used or not.\n         */\n        checkIfOtherProductCodeIsUsed: function() {\n\n            var thisInstance = this;\n            this.$set('checking_other_product_code', true);\n\n            // Build post data\n            var postData = {\n                _token: Token.get(),\n                product_code: this.$get('other_product_code')\n            };\n\n            this.$http.post('/admin-center/products-manager/check-if-code-is-used', postData, function(response) {\n                thisInstance.$set('checking_other_product_code', true);\n                thisInstance.$set('other_product_used', response.used);\n                thisInstance.$set('other_product_checked', true);\n            }).error(function(response) {\n                //\n            });\n        },\n\n        /**\n         * Add new application product.\n         */\n        addApplicationProduct: function() {\n\n            // Hide modal and show loader\n            $('#add-application-product-modal').modal('hide');\n            Alert.loader();\n\n            // Build post data\n            var postData = {\n                _token: Token.get(),\n                product_name: this.$get('product_name'),\n                product_code: this.$get('product_code')\n            };\n\n            // Check if other product code field should be added\n            if (this.$get('other_product_checked') && !this.$get('other_product_used')) {\n                postData.not_used_code = this.$get('other_product_code');\n            }\n\n            // Make post request\n            this.$http.post('/admin-center/products-manager/add-new', postData, function(response) {\n\n                this.getProducts('/admin-center/products-manager/get', function() {\n                    Alert.success(response.title, response.message);\n                });\n\n            }).error(function(response) {\n               Alert.generalError();\n            });\n        },\n\n        /**\n         * Reset add application product modal data.\n         */\n        resetAddApplicationProductModal: function() {\n\n            var fields = [\n                'product_name',\n                'product_code',\n                'other_product_code',\n                'error',\n                'errors',\n                'checked',\n                'checking_product_code',\n                'product_used',\n                'checking_other_product_code',\n                'other_product_used',\n                'other_product_checked'\n            ];\n\n            Reset.vueData(this, fields);\n\n            $('#product-code').val('');\n            $('#not-used-product-code').val('');\n            $('#product-name').val('');\n        },\n    }\n});"],"sourceRoot":"/source/"}