{"version":3,"sources":["settings.js"],"names":[],"mappingsfile":"settings.js","sourcesContent":["new Vue({\n    el: '#settings',\n\n    ready: function() {\n        this.getSettings();\n    },\n\n    methods: {\n\n        /**\n         * Get current user settings.\n         */\n        getSettings: function() {\n            Alert.loader();\n            this.$http.get('/settings/get', function(response) {\n                this.$set('loaded', true);\n                this.$set('email', response.data.email);\n                this.$set('displayed_bills', response.data.displayed_bills);\n                this.$set('displayed_clients', response.data.displayed_clients);\n                this.$set('displayed_products', response.data.displayed_products);\n                this.$set('displayed_custom_products', response.data.displayed_custom_products);\n                this.$set('language_name', response.data.language);\n                Alert.close();\n            }).error(function(response) {\n                Alert.generalError();\n            });\n        },\n\n        /**\n         * Allow user to change their email.\n         */\n        editEmail: function() {\n\n            // Data for alert\n            var alertData = {\n                title: Translation.settings('edit-email'),\n                text: Translation.settings('edit-email-description'),\n                requiredInput: Translation.settings('email-input-required'),\n                inputValue: this.$get('email')\n            };\n\n            var thisInstance = this;\n\n            // Show alert\n            Alert.edit(alertData, function(input) {\n\n                // Post data\n                var data = {\n                    _token: Token.get(),\n                    email: input\n                };\n\n                // Make request and handle response\n                thisInstance.$http.post('/settings/edit-email', data, function(response) {\n\n                    this.$set('email', response.email);\n\n                    // Update email from header with jquery\n                    $('#user-email').html(this.$get('email'));\n\n                    Alert.success(response.title, response.message);\n\n                }).error(function(response) {\n                    if (!response.message) {\n                        Alert.generalError();\n                        return;\n                    }\n                    Alert.error(response.title, response.message);\n                });\n\n            });\n        },\n\n        /**\n         * Allow user to change their password.\n         */\n        editPassword: function() {\n\n            this.$set('loading', true);\n\n            var data = {\n                _token: Token.get(),\n                password: this.$get('password'),\n                new_password: this.$get('new_password'),\n                new_password_confirmation: this.$get('confirm_password')\n            };\n\n            this.$http.post('/settings/edit-password', data, function(response) {\n\n                $('#edit-password-modal').modal('hide');\n                this.$set('loading', false);\n                Alert.success(response.title, response.message);\n\n            }).error(function(response) {\n\n                this.$set('loading', false);\n\n                if (!response.message) {\n                    this.$set('error', Translation.common('general-error'));\n                    return;\n                }\n                this.$set('error', response.message);\n\n            });\n\n        },\n\n        /**\n         * Reset edit password modal.\n         */\n        resetEditPasswordModal: function() {\n            this.$set('error', '');\n            this.$set('password', '');\n            this.$set('new_password', '');\n            this.$set('confirm_password', '');\n        },\n\n        /**\n         * Edit number of displayed bills on bills page.\n         */\n        editNumberOfDisplayedBills: function() {\n\n            // Alert data\n            var alertData = {\n                title: Translation.settings('displayed-bills'),\n                text: Translation.settings('displayed-bills-description'),\n                requiredInput: Translation.settings('number-of-displayed-bills-required'),\n                inputValue: this.$get('displayed_bills')\n            };\n\n            var thisInstance = this;\n\n            Alert.edit(alertData, function(input) {\n\n                // Post data\n                var data = {\n                    _token: Token.get(),\n                    bills_to_display: input\n                };\n\n                // Do request\n                thisInstance.$http.post('/settings/edit-number-of-displayed-bills', data, function(response) {\n\n                    Alert.success(response.title, response.message);\n                    this.$set('displayed_bills', response.displayed_bills);\n\n                }).error(function(response) {\n                    if (!response.message) {\n                        Alert.generalError();\n                        return;\n                    }\n                    Alert.error(response.title, response.message);\n                });\n\n            });\n        },\n\n        /**\n         * Edit number of displayed clients on clients page.\n         */\n        editNumberOfDisplayedClients: function() {\n\n            // Alert data\n            var alertData = {\n                title: Translation.settings('displayed-clients'),\n                text: Translation.settings('displayed-clients-description'),\n                requiredInput: Translation.settings('number-of-displayed-clients-required'),\n                inputValue: this.$get('displayed_clients')\n            };\n\n            var thisInstance = this;\n\n            Alert.edit(alertData, function(input) {\n\n                // Post data\n                var data = {\n                    _token: Token.get(),\n                    clients_to_display: input\n                };\n\n                // Post request\n                thisInstance.$http.post('/settings/edit-number-of-displayed-clients', data, function(response) {\n\n                    Alert.success(response.title, response.message);\n                    this.$set('displayed_clients', response.displayed_clients);\n\n                }).error(function(response) {\n                    if (!response.message) {\n                        Alert.generalError();\n                        return;\n                    }\n                    Alert.error(response.title, response.message);\n                });\n\n            });\n        },\n\n        /**\n         * Edit number of displayed products on products page.\n         */\n        editNumberOfDisplayedProducts: function() {\n\n            // Alert data\n            var alertData = {\n                title: Translation.settings('displayed-products'),\n                text: Translation.settings('displayed-products-description'),\n                requiredInput: Translation.settings('number-of-displayed-products-required'),\n                inputValue: this.$get('displayed_products')\n            };\n\n            var thisInstance = this;\n\n            Alert.edit(alertData, function(input) {\n\n                // Post data\n                var data = {\n                    _token: Token.get(),\n                    products_to_display: input\n                };\n\n                // Do request\n                thisInstance.$http.post('/settings/edit-number-of-displayed-products', data, function(response) {\n\n                    Alert.success(response.title, response.message);\n                    this.$set('displayed_products', response.displayed_products);\n\n                }).error(function(response) {\n                    if (!response.message) {\n                        Alert.generalError();\n                        return;\n                    }\n                    Alert.error(response.title, response.message);\n                })\n\n            });\n        },\n\n        /**\n         * Edit number of custom products displayed.\n         */\n        editNumberOfDisplayedCustomProducts: function() {\n\n            // Alert data\n            var alertData = {\n                title: Translation.settings('displayed-custom-products'),\n                text: Translation.settings('displayed-custom-products-description'),\n                requiredInput: Translation.settings('number-of-displayed-custom-products-required'),\n                inputValue: this.$get('displayed_custom_products')\n            };\n\n            var thisInstance = this;\n\n            Alert.edit(alertData, function(input) {\n\n                // Post data\n                var data = {\n                    _token: Token.get(),\n                    custom_products_to_display: input\n                };\n\n                // Do request\n                thisInstance.$http.post('/settings/edit-number-of-displayed-custom-products', data, function(response) {\n\n                    Alert.success(response.title, response.message);\n                    this.$set('displayed_custom_products', response.displayed_custom_products);\n\n                }).error(function(response) {\n                    if (!response.message) {\n                        Alert.generalError();\n                        return;\n                    }\n                    Alert.error(response.title, response.message);\n                });\n            });\n        },\n\n        /**\n         * Make request to get available languages.\n         */\n        loadLanguages: function() {\n\n            if (this.$get('languages')) {\n                return;\n            }\n\n            this.$http.get('settings/get-languages', function(response) {\n                this.$set('languages', response.languages);\n                this.$set('languages_loaded', true);\n            }).error(function(response) {\n                if (!response.message) {\n                    this.$set('error', Translation.common('general-error'));\n                    return;\n                }\n                this.$set('error', response.message);\n            });\n\n        },\n\n        /**\n         * Edit application language.\n         */\n        editLanguage: function() {\n\n            var data = {\n                _token: Token.get(),\n                language: this.$get('language')\n            };\n\n            this.$http.post('/settings/change-language', data, function(response) {\n\n                $('#edit-language-modal').modal('hide');\n                //Alert.success(response.title, response.message);\n                //this.$set('language_name', response.language);\n                window.location.replace('/settings');\n\n            }).error(function(response) {\n                if (!response.message) {\n                    this.$set('error', Translation.common('general-error'));\n                    return;\n                }\n                this.$set('error', response.message);\n            });\n        },\n\n        /**\n         * Reset user settings to default values.\n         */\n        resetToDefaultValues: function() {\n\n            var thisInstance = this;\n\n            // Show confirmation\n            Alert.confirmResetToDefault(function() {\n\n                thisInstance.$http.get('/settings/reset-to-default-values', function(response) {\n\n                    Alert.success(response.title, response.message);\n                    this.$set('displayed_bills', response.displayed_bills);\n                    this.$set('displayed_clients', response.displayed_clients);\n                    this.$set('displayed_products', response.displayed_products);\n                    this.$set('displayed_custom_products', response.displayed_custom_products);\n\n                }).error(function(response) {\n                    if (!response.message) {\n                        Alert.generalError();\n                        return;\n                    }\n                    Alert.error(response.title, response.message);\n                });\n            });\n        }\n\n    }\n\n});"],"sourceRoot":"/source/"}