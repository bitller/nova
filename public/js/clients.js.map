{"version":3,"sources":["clients.js"],"names":[],"mappingsfile":"clients.js","sourcesContent":["new Vue({\n\n    el: '#clients',\n\n    /**\n     * Called when page is ready and paginate initial clients\n     */\n    ready: function() {\n        this.getClients('/clients/get');\n    },\n\n    methods: {\n\n        /**\n         * Delete client\n         *\n         * @param client_id\n         * @param current_page\n         * @param rows_on_page\n         */\n        deleteClient: function(client_id, current_page, rows_on_page) {\n\n            var thisInstance = this;\n            var clientsSelector = $('#clients');\n\n            swal({\n                    title: clientsSelector.attr('confirm'),\n                    text: clientsSelector.attr('confirm-message'),\n                    type: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: \"#DD6B55\",\n                    confirmButtonText: clientsSelector.attr('confirm-delete'),\n                    cancelButtonText: clientsSelector.attr('cancel'),\n                    closeOnConfirm: false\n                },\n                function() {\n                    // Show loader\n                    swal({\n                        title: $('#clients').attr('loading'),\n                        type: \"info\",\n                        showConfirmButton: false\n                    });\n\n                    // Build url and make request\n                    var url = '/clients/' + client_id + '/delete';\n                    thisInstance.$http.get(url).success(function(response) {\n\n                        // Build url to paginate new clients\n                        var paginateClientsUrl = this.buildGetClientsUrl(rows_on_page, current_page);\n\n                        // Make request to get paginate clients\n                        thisInstance.$http.get(paginateClientsUrl).success(function(data) {\n                            // Show a success message and update clients list\n                            swal({\n                                title: response.title,\n                                text: response.message,\n                                type: \"success\",\n                                timer: 1750,\n                                showConfirmButton: false\n                            });\n                            thisInstance.$set('clients', data);\n                        });\n\n                    }).error(function(response) {\n                        //\n                    });\n                });\n\n        },\n\n        /**\n         * Create a new client\n         */\n        createClient: function() {\n\n            var thisInstance = this;\n            var clientsSelector = $('#clients');\n\n            // Show prompt\n            swal({\n                    title: clientsSelector.attr('add-client'),\n                    text: clientsSelector.attr('insert-client-name'),\n                    type: \"input\",\n                    showCancelButton: true,\n                    closeOnConfirm: false,\n                    animation: \"slide-from-top\",\n                    cancelButtonText: clientsSelector.attr('cancel'),\n                    confirmButtonText: clientsSelector.attr('continue'),\n                    inputPlaceholder: clientsSelector.attr('client-name')\n                },\n                function(inputValue) {\n                    if (inputValue === false) {\n                        return false;\n                    }\n\n                    if (inputValue === \"\") {\n                        swal.showInputError(clientsSelector.attr('client-name-required'));\n                        return false\n                    }\n\n                    // Show phone number prompt\n                    swal({\n                        title: clientsSelector.attr('add-client'),\n                        text: clientsSelector.attr('phone-is-optional'),\n                        type: \"input\",\n                        closeOnConfirm: false,\n                        confirmButtonText: clientsSelector.attr('continue'),\n                        inputPlaceholder: clientsSelector.attr('client-phone-number')\n                    }, function(phoneInput) {\n\n                        swal({\n                            title: clientsSelector.attr('loading'),\n                            type: \"info\",\n                            showConfirmButton: false\n                        });\n\n                        var dataToPost = {\n                            name: inputValue,\n                            phone: phoneInput,\n                            _token: $('#token').attr('content')\n                        };\n\n                        // Make create client request\n                        thisInstance.$http.post('/clients/create', dataToPost).success(function(response) {\n\n                            // Make request to get clients\n                            thisInstance.$http.get('/clients/get', function(data) {\n\n                                thisInstance.$set('loaded', true);\n                                thisInstance.$set('clients', data);\n\n                                if (response.success) {\n                                    swal({\n                                        title: response.title,\n                                        text: response.message,\n                                        type: \"success\",\n                                        timer: 1750,\n                                        showConfirmButton: false\n                                    });\n                                    return true;\n                                }\n\n                                swal({\n                                    title: response.title,\n                                    text: response.message,\n                                    type: \"error\",\n                                    confirmationButtonText: clientsSelector.attr('ok-button')\n                                });\n\n                            });\n                        }).error(function(response) {\n                            // Make request to get clients\n                            thisInstance.$http.get('/clients/get', function(data) {\n\n                                thisInstance.$set('loaded', true);\n                                thisInstance.$set('clients', data);\n\n                                if (response.success) {\n                                    swal({\n                                        title: response.title,\n                                        text: response.message,\n                                        type: \"success\",\n                                        timer: 1750,\n                                        showConfirmButton: false\n                                    });\n                                    return true;\n                                }\n\n                                swal({\n                                    title: response.title,\n                                    text: response.message,\n                                    type: \"error\",\n                                    confirmationButtonText: clientsSelector.attr('ok-button')\n                                });\n\n                            });\n                        });\n                    });\n                });\n        },\n\n        /**\n         * This method is used by pagination links\n         *\n         * @param page_url\n         */\n        paginate: function(page_url) {\n            if (page_url) {\n                this.getClients(page_url);\n            }\n        },\n\n        /**\n         * Make getClients request\n         *\n         * @param url\n         */\n        getClients: function(url) {\n\n            // Show loader\n            swal({\n                title: $('#clients').attr('loading'),\n                type: \"info\",\n                showConfirmButton: false\n            });\n\n            // Make request\n            this.$http.get(url).success(function(data) {\n                this.$set('loaded', true);\n                this.$set('clients', data);\n                swal.close();\n            });\n        },\n\n        /**\n         * Return url used by getClients request\n         *\n         * @param rows_on_page\n         * @param current_page\n         * @returns {string}\n         */\n        buildGetClientsUrl: function(rows_on_page, current_page) {\n\n            if (rows_on_page < 1) {\n                current_page = current_page - 1;\n            }\n\n            return '/clients/get?page=' + current_page;\n        }\n    }\n});"],"sourceRoot":"/source/"}