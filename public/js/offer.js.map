{"version":3,"sources":["offer.js"],"names":[],"mappingsfile":"offer.js","sourcesContent":["new Vue({\n\n    /**\n     * Target element.\n     */\n    el: '#offer',\n\n    ready: function() {\n        this.getOffer();\n    },\n\n    methods: {\n\n        /**\n         * Ajax request to get offer data.\n         *\n         * @param successCallback\n         */\n        getOffer: function(successCallback) {\n\n            this.$set('loaded', false);\n\n            if (typeof successCallback === 'undefined') {\n                Alert.loader();\n            }\n\n            this.$http.get('/admin-center/subscriptions/offers/' + $('#offer').attr('offer-id') + '/get', function(response) {\n\n                this.$set('loaded', true);\n                this.$set('offer', response.offer);\n\n                // Check if a callback was given\n                if (typeof successCallback === 'undefined') {\n                    Alert.close();\n                    return;\n                }\n\n                // Execute callback\n                successCallback();\n            }).error(function(response) {\n\n                // Handle error response\n                this.$set('loaded', false);\n                if (response.message) {\n                    Alert.error(response.title, response.message);\n                    return;\n                }\n                Alert.generalError();\n            });\n        },\n\n        /**\n         * Edit offer name.\n         */\n        editOfferName: function() {\n\n            this.$set('loading', true);\n\n            // Build post data\n            var data = {\n                _token: Token.get(),\n                offer_name: this.$get('offer_name'),\n                user_password: this.$get('user_password')\n            };\n\n            this.$http.post('/admin-center/subscriptions/offers/' + $('#offer').attr('offer-id') + '/edit-name', data, function(response) {\n\n                // Handle success response\n                this.$set('loading', false);\n                this.$set('offer', response.offer);\n                $('#edit-offer-name-modal').modal('hide');\n                Alert.success(response.title, response.message);\n\n            }).error(function(response) {\n\n                // Handle error response\n                this.$set('loading', false);\n                if (!response.message) {\n                    this.$set('error', Translation.common('general-error'));\n                    return;\n                }\n                this.$set('errors', response.errors);\n            });\n        },\n\n        /**\n         * Reset edit offer name modal data.\n         */\n        resetEditOfferNameModal: function() {\n            this.$set('offer_name', '');\n            this.$set('user_password', '');\n            this.$set('error', '');\n            this.$set('errors', '');\n        },\n\n        /**\n         * Edit offer amount.\n         */\n        editOfferAmount: function() {\n\n            this.$set('loading', true);\n\n            // Build post data\n            var data = {\n                _token: Token.get(),\n                offer_amount: this.$get('offer_amount'),\n                user_password: this.$get('user_password')\n            };\n\n            this.$http.post('/admin-center/subscriptions/offers/' + $('#offer').attr('offer-id') + '/edit-amount', data, function(response) {\n\n                // Handle success response\n                this.$set('loading', false);\n                this.$set('offer', response.offer);\n                $('#edit-offer-amount-modal').modal('hide');\n                Alert.success(response.title, response.message);\n\n            }).error(function(response) {\n\n                // Handle error response\n                this.$set('loading', false);\n                if (!response.message) {\n                    this.$set('error', Translation.common('general-error'));\n                    return;\n                }\n                this.$set('errors', response.errors);\n            });\n        },\n\n        /**\n         * Reset offer amount modal data.\n         */\n        resetEditOfferAmountModal: function() {\n            this.$set('offer_amount', '');\n            this.$set('user_password', '');\n            this.$set('error', '');\n            this.$set('errors', '');\n        },\n\n        /**\n         * Edit offer promo code.\n         */\n        editOfferPromoCode: function() {\n\n            var config = {\n                action_url: 'edit-promo-code',\n                modal_selector: '#edit-offer-promo-code-modal',\n                post: {\n                    promo_code: this.$get('promo_code'),\n                    user_password: this.$get('user_password')\n                }\n            };\n\n            this._generalEdit(config);\n        },\n\n        /**\n         * Reset edit offer promo code modal data.\n         */\n        resetEditOfferPromoCodeModal: function() {\n            this.$set('promo_code', '');\n            this.$set('user_password', '');\n            this.$set('error', '');\n            this.$set('errors', '');\n        },\n\n        useOfferOnSignUp: function() {\n\n            var config = {\n                action_url: 'use-on-sign-up',\n                modal_selector: '#use-offer-on-sign-up-modal',\n                post: {\n                    use_on_sign_up: this.$get('use_on_sign_up'),\n                    user_password: this.$get('user_password')\n                }\n            };\n\n            this._generalEdit(config);\n        },\n\n        /**\n         * Reset use offer on sign up modal data.\n         */\n        resetUseOfferOnSignUpModal: function() {\n            this._resetModal(['user_password']);\n        },\n\n        /**\n         * Edit offer data based on given config.\n         *\n         * @param config\n         * @private\n         */\n        _generalEdit: function(config) {\n\n            // Set loading variable to true. Use default if no loading variable name was given\n            if (!config.loading_variable_name) {\n                config.loading_variable_name = 'loading';\n            }\n            this.$set(config.loading_variable_name, true);\n\n            // Add token to post data\n            config.post._token = Token.get();\n\n            // Make post request\n            this.$http.post('/admin-center/subscriptions/offers/' + $('#offer').attr('offer-id') + '/' + config.action_url, config.post, function(response) {\n\n                // Handle success response\n                this.$set(config.loading_variable_name, false);\n                this.$set('offer', response.offer);\n                $(config.modal_selector).modal('hide');\n                Alert.success(response.title, response.message);\n\n            }).error(function(response) {\n\n                // Handle error response\n                this.$set(config.loading_variable_name, false);\n                if (!response.message) {\n                    this.$set('error', Translation.common('general-error'));\n                    return;\n                }\n                this.$set('errors', response.errors);\n            });\n        },\n\n        /**\n         * Reset given modal fields.\n         *\n         * @param fields\n         * @private\n         */\n        _resetModal: function(fields) {\n            for (var index = 0; index < fields.length; index++) {\n                this.$set(fields[index], '');\n            }\n        }\n    }\n});"],"sourceRoot":"/source/"}